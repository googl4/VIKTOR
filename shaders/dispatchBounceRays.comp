#version 460 core

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout(std430, push_constant) uniform constants {
	uint rngSeed;
};

layout(std430, binding = 0) buffer hitBuf {
	hitData_t hits[];
};

layout(std430, binding = 1) buffer rayBuf {
	vec4 rays[][2];
};

layout(std430, binding = 2) buffer dispatchBuf {
	uvec3 dispatchSize;
};

uint rndState;

uint xorshift( uint n ) {
	n ^= n << 13;
	n ^= n >> 17;
	n ^= n << 5;
	return n;
}

uint rnd() {
	rndState = xorshift( rndState );
	return rndState;
}

float frnd() {
	uint f = 0x3F800000 | ( xorshift() >> 9 );
	return ( uintBitsToFloat( f ) - 1.5f ) * 2.0f;
}

void main() {
	rndState = rngSeed + ( gl_GlobalInvocationID.y * gl_NumWorkGroups.x * gl_WorkGroupSize.x + gl_GlobalInvocationID.x );
	rnd();
	
	
	
	uint baseIndex;
	uvec4 storeBallot = subgroupBallot( pixelValid );
	
	if( subGroupElect() ) {
		uint pcount = subgroupBallotBitCount( storeBallot );
		baseIndex = atomicAdd( dispatchSize.x, pcount );
	}
	
	baseIndex = subgroupBroadcastFirst( baseIndex );
	
	uint storeIndex = baseIndex + subgroupBallotExclusiveBitCount( storeBallot );
	rays[baseIndex][0] = camPos;
	rays[baseIndex][1] = viewRay;
}
